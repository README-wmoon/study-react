리액트 이벤트 주기

function f(){
    // 버튼이 클릭 되면 실행시키고 싶은 함수
}

html
    <button onclick="f(); f2();">버튼!</button>
    --> 이름없는 함수가 만들어짐
    ()=> {
        f(); f2();
    }

react
    <button onClick={f}>버튼!</button>


특정 변수 속에 있는 값이 달라진다면
화면을 다시 그려줘(re-rendering) 라고 명령
    리액트의 hook함수(use로 시작하는 함수) useState 함수를 사용해야 한다.

함수
    1. 인자?
        값1개, state변수의 초기값

    2. 동작?
        state변수와 setState함수를 만들어준다

    3. 함수사용결과?
        2칸짜리 배열, [ state변수, setState함수 ]

state 변수란?
    컴포넌트안에서 변수 안에 들어있는 값이 달라지면
    다시 그 컴포넌트를 그려줘야하는 경우에는 그 변수를 state변수로 만들어서
    관리한다

setState함수란?
    만들어진 state변수속의 값을 변경시켜주는 함수
    state 변수 속에 대입해야하는 값을 설정해주는 삼수,
    state변수에 대입연산자를 사용하여 직업 변경하면 원본이 훼손되기때문에
    절대로 state변수에 대입연산자 쓰면안되고,
        -->
    setState함수를 통해 변경해줘야 한다


구조분해할당
let [a, b] = [10, 20];
//a 속에는 무엇이? --> 10
//b 속에는 ? --> 20

function tmp() {
    function abc() {
        return 500;
    }
    return [10, abc];
}

let [a,b] = tmp();

//a ? --> 10
//b ? --> abc


let [a,b] = [10, abc];

// a ? 10
// b ? 함수

3. 함수사용결과?
        2칸짜리 배열, [ state변수, setState함수 ]

let [a,b] = useState();
// a ? : state 변수
// b ? : setState함수


변수속에 있는 값이 변하면 다시 그려져야할 경우에
그 변수를 state변수로 만든다
대신 state변수 속에 있는 값을 변경할 때는 대입연산자로 직업 변경하는 것이
아니라 setState변수를 통해서 값을 변경해준다


자식 컴포넌트 (컴포넌트 분리)

state변수의 상태가 바뀌어서 re-rendering된다면
자기 자신이 속해있는 컴포넌트가 다시 re-rendering된다

이벤트가 발생하면 실행되는 함수의 매개변수에는 자동으로
발생한 이벤트에대한 정보(어떤이벤트인지? x좌표, .. , 어떤태그에서발생한이벤트인지)들이 
들어있을 이벤트객체가 인자로 전달이 된다

클릭이벤트가 발생하면
    이벤트객체.target에는 클릭이벤트가 발생한 html태그(요소)가 객체로 들어있다

input태그에서 이벤트가 발생하면 
    이벤트객체.target에 발생한 input태그객체가 들어있고,
    input태그에 입력한 값은 input태그 안에 들어있다

    --> 이벤트객체.target.value --> 사용자가 input태그에 입력한 값


+
배열에서 map함수를 사용하여 여러개의 반복되는 컴포넌트를 간단히 그려보기
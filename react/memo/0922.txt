.env 로 시작하는 파일
    node가 실행되면서(react, express 등 이 실행될때) 사용하는
    환경 변수를 설정해주는 파일

    .env
        가장 최상위, (우선순위가 낮다)
    .env.local
        .env보다 우선순위가 높은 파일로서 test환경 제외하고 모든환경에서
        로딩됨
    .env.development
        개발환경에서 로딩되는 환경변수들
    .env.test
        테스트 환경에서 로딩되는 환경 변수들
    ...

.env 파일에 있는 환경변수를
실행중인 프로그램의 env 객체 안에 넣는 방법
dotenv 라이브러리를 활용한다

*** dotenv.config()
함수를 사용하면 기본적으로 .env 안에있는
변수들을 
process.env 안에 만들어준다

이때 만들고 싶은 변수가 .env.local 안에있는
변수라면
dotenv.config({path:'경로'});
옵션은 추가하여 만들 수 있다

유효성 검사의 논리
    1. input 태그의 값이 변화할떄마다 state변수에 저장해준다
    2. 버튼을 클릭 했을때 state변수에 저장된 값이 
        유효한 값인지 검사한다
        그리고 유효한 값이 아니라면 에러메시지state변수를 변화해
        준다. 에러메시지 state변수가 바뀌었으니까
        re-rendering이 된다(에러메시지가 보인다)
        모든 input state변수의 값이 유효한 값임을 확인했다면
        값을 서버쪽으로 전송한다

유효성 검사를 쉽게 하도록 도와주는 라이브러리
    formik
    yup

리액트의 스테이트 변수 관리 원칙
    나중에 한번에 바꿔준다

예를들어
const [number, setNumber] = useState(0);

function a() {
    setNumber(100);
    number에는 100이이겠지? -- 이렇게 생각하면 안된다xxx
    setNumber(200);
    setNumber(300);
}

<button onClick={a}>클릭!</button> 

버튼을 클릭하면
    number라는 state변수에는 100이 대입되야해 -- 아직까지 기억하고있음
    number를 300대입하자

최신 state를 조회하는 방법
setState 함수에 인자로 함수를 전달한다

state변수를 활용하지 않는 방법
리액트에서 변수는 크게 세가지

1. 일반변수
    값이 변경되어도 re-rendering되지 않음
    re-rendering 될때 초기값이 대입됨

2. state변수
    값이 변경되면 re-rendering을 함
    re-rendering 되더라도 초기값이 대입되지 않음(자기값을 기억)

3. ref객체
    값이 변경되더라도 re-rendering 되지 않음
    re-rendering되더라도 초기값이 대입되지 않음(자기 값을 기억)

const MyComponent = () => {
    let a = 10; // 일반변수

    // re-rendering되어도 자기자신 값을 기억
    // 자기자신이 변하면 re-rendering 시키는것
    let [b,setB] = useState(10); // state변수

    // re-rendering될때 자기 자신의 값을 기억
    // 자기자신의 값이 수정되어도
    // re-rendering은 안시키고싶은
    let c = useRef(null);

    return (
        <>
            {a}
            {b}
            <input ref={c} />
            //{c.current}
            <button>a버튼 클릭시 a를 1더한값으로 변경해줌</button>
            <button>b버튼 클릭시 b를 1더한값으로 변경해줌</button>
            <button>c버튼 클릭시 c를 1더한값으로 변경해줌</button>
            <h1>안녕</h1>)
        </>
    );
}

Ref 객체의 current에 태그 객체를 대입하는 방법

const ref객체이름 = useRef(null);


<h1 ref={ref객체이름}>안녕</h1>

--> ref객체이름.current에는 h1태그객체가 들어있다

Ref 객체의 current에다 배열을 만들고, 그 배열 속에 여러개의 태그
객체를 대입하는 방법

const ref객체이름 = useRef([]); // ref객체이름.current에는 비어있는배열

<h1 ref={(el)=>{ref객체이름.current}}>안녕</h1>
<p ref={(el)=>{ref객체이름.push(el)}}>반가워</p>
<input ref={(el)=>{ref객체이름.push(el)}} />

--> ref객체이름.current에는 [h1태그객체, p태그객체, input태그객체]